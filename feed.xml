<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Big Harmmer</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://burling.wang/</link>
    <atom:link href="http://burling.wang/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 30 Sep 2015 17:11:23 +0800</pubDate>
    <lastBuildDate>Wed, 30 Sep 2015 17:11:23 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;h1 id=&quot;raw-frgc-200&quot;&gt;Raw-FRGC-200&lt;/h1&gt;

&lt;h2 id=&quot;data-size&quot;&gt;Data Size&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;test number = 1715&lt;/li&gt;
  &lt;li&gt;train number = 6469&lt;/li&gt;
  &lt;li&gt;valid number = 900&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;实验结果&lt;/h2&gt;
&lt;p&gt;| nb_epoch	| test(loss, acc.)	| train(loss, acc.)	| valid(loss, acc.) |
| —————— | ———– | ———– | ———-|
| 20			| 0.0408, 0.9936| 0.0006, 1.0000| 0.0006, 1.0000|&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;实验参数&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!python&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#layer1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;valid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#layer2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;valid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#Dense1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2048&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;tanh&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#output&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2048&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classesNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;softmax&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#others&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sgd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SGD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;momentum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nesterov&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;categorical_crossentropy&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sgd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;categorical&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nb_epoch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;show_accuracy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;validation_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;ldp-frgc-20-model0&quot;&gt;LDP-FRGC-20-Model0&lt;/h1&gt;
&lt;p&gt;## Data Size
+ test number = 169
+ valid number = 90
+ train number = 635&lt;/p&gt;

&lt;h2 id=&quot;result&quot;&gt;Result&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;nb_epoch&lt;/th&gt;
      &lt;th&gt;test(loss, acc.)&lt;/th&gt;
      &lt;th&gt;train(loss, acc.)&lt;/th&gt;
      &lt;th&gt;valid(loss, acc.)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;100&lt;/td&gt;
      &lt;td&gt;1.3548, 0.5858&lt;/td&gt;
      &lt;td&gt;1.0302, 0.6551&lt;/td&gt;
      &lt;td&gt;1.1237, 0.6667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;400&lt;/td&gt;
      &lt;td&gt;7.4478, 0.4852&lt;/td&gt;
      &lt;td&gt;7.2513, 0.5654&lt;/td&gt;
      &lt;td&gt;6.9568, 0.5111&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;layer-parameters&quot;&gt;Layer parameters&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;#!python
model.add(Convolution2D(5, 4, 5, 5, border_mode=&#39;valid&#39;)) 
model.add(Convolution2D(5, 5, 5, 5, border_mode=&#39;full&#39;))
model.add(MaxPooling2D(poolsize=(2, 2)))

model.add(Convolution2D(10, 5, 5, 5, border_mode=&#39;valid&#39;))
model.add(Convolution2D(10, 10, 5, 5, border_mode=&#39;full&#39;))
model.add(MaxPooling2D(poolsize=(2,2)))

model.add(Flatten())
model.add(Dense(10*36*32, 1024))
model.add(Activation(&#39;tanh&#39;))

model.add(Dense(1024, totalClassCount))
model.add(Activation(&#39;softmax&#39;))

sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=sgd,class_mode=&quot;categorical&quot;)

model.fit(data, label, batch_size=40, nb_epoch=?,shuffle=True,verbose=1,
	show_accuracy=True,validation_data=...)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;ldp-frgc-20-model1&quot;&gt;LDP-FRGC-20-Model1&lt;/h1&gt;
&lt;p&gt;## Data Size&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;test&lt;/th&gt;
      &lt;th&gt;train&lt;/th&gt;
      &lt;th&gt;valid&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;169&lt;/td&gt;
      &lt;td&gt;635&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;result-1&quot;&gt;Result&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;nb_epoch&lt;/td&gt;
      &lt;td&gt;test(loss, acc.)&lt;/td&gt;
      &lt;td&gt;train(loss, acc.)&lt;/td&gt;
      &lt;td&gt;valid(loss, acc.)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;——————&lt;/td&gt;
      &lt;td&gt;———–&lt;/td&gt;
      &lt;td&gt;———–&lt;/td&gt;
      &lt;td&gt;———-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0064, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0001, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0002, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;layer-parameters-1&quot;&gt;Layer Parameters&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!python
model.add(Convolution2D(5, 4, 3, 3, border_mode=&#39;valid&#39;)) 
model.add(MaxPooling2D(poolsize=(2, 2)))

model.add(Convolution2D(10, 5, 3, 3, border_mode=&#39;valid&#39;))
model.add(MaxPooling2D(poolsize=(2,2)))

model.add(Flatten())
model.add(Dense(10*34*30, 1024))
model.add(Activation(&#39;tanh&#39;))

model.add(Dense(1024, totalClassCount))
model.add(Activation(&#39;softmax&#39;))

sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=sgd,class_mode=&quot;categorical&quot;)

model.fit(data, label, batch_size=40, nb_epoch=50,shuffle=True,verbose=1,
	show_accuracy=True,validation_data=...)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;ldp-frgc-50&quot;&gt;LDP-FRGC-50&lt;/h1&gt;
&lt;p&gt;## Result&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data size(test, train, valid)&lt;/td&gt;
      &lt;td&gt;nb_epoch&lt;/td&gt;
      &lt;td&gt;test(loss, acc.)&lt;/td&gt;
      &lt;td&gt;train(loss, acc.)&lt;/td&gt;
      &lt;td&gt;valid(loss, acc.)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;———&lt;/td&gt;
      &lt;td&gt;——————&lt;/td&gt;
      &lt;td&gt;———–&lt;/td&gt;
      &lt;td&gt;———–&lt;/td&gt;
      &lt;td&gt;———-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(570, 1262, 203)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0190, 0.9965&lt;/td&gt;
      &lt;td&gt;0.0002, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0002, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;layer-parameters-2&quot;&gt;Layer Parameters&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!python
model = Sequential()

model.add(Convolution2D(5, 4, 3, 3, border_mode=&#39;valid&#39;)) 
model.add(MaxPooling2D(poolsize=(2, 2)))

model.add(Convolution2D(10, 5, 3, 3, border_mode=&#39;valid&#39;))
model.add(MaxPooling2D(poolsize=(2,2)))

model.add(Flatten())
model.add(Dense(10*34*30, 1024))
model.add(Activation(&#39;tanh&#39;))

model.add(Dense(1024, totalClassCount))
model.add(Activation(&#39;softmax&#39;))

sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=sgd,class_mode=&quot;categorical&quot;)

model.fit(data, label, batch_size=40, nb_epoch=50,shuffle=True,verbose=1,
	show_accuracy=True,validation_data=...)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;ldp-frgc-80&quot;&gt;LDP-FRGC-80&lt;/h1&gt;

&lt;h2 id=&quot;result-2&quot;&gt;Result&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data size(test, train, valid)&lt;/td&gt;
      &lt;td&gt;nb_epoch&lt;/td&gt;
      &lt;td&gt;test(loss, acc.)&lt;/td&gt;
      &lt;td&gt;train(loss, acc.)&lt;/td&gt;
      &lt;td&gt;valid(loss, acc.)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;————-&lt;/td&gt;
      &lt;td&gt;——————&lt;/td&gt;
      &lt;td&gt;———–&lt;/td&gt;
      &lt;td&gt;———–&lt;/td&gt;
      &lt;td&gt;———-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(283, 2877, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0021, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0002, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0002, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(663, 2497, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0076, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0002, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0002, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(980, 2180, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0248, 0.9959&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(1297, 1863, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0289, 0.9977&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(1580, 1580, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0285, 0.9962&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(980, 2180, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0714, 0.9881&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(1926, 1234, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0697, 0.9875&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2497, 663, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.1323, 0.9788&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2814, 346, 190)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.3256, 0.9375&lt;/td&gt;
      &lt;td&gt;0.0005, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0005, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2840, 320, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.3042, 0.9613&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2920, 240, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.4085, 0.9514&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(3000, 160, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.6849, 0.8987&lt;/td&gt;
      &lt;td&gt;0.0003, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0002, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(3080, 80, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1.5880, 0.7185&lt;/td&gt;
      &lt;td&gt;0.0001, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0001, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;layer-parameters-3&quot;&gt;Layer Parameters&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!python
model = Sequential()

model.add(Convolution2D(5, 4, 3, 3, border_mode=&#39;valid&#39;)) 
model.add(MaxPooling2D(poolsize=(2, 2)))

model.add(Convolution2D(10, 5, 3, 3, border_mode=&#39;valid&#39;))
model.add(MaxPooling2D(poolsize=(2,2)))

model.add(Flatten())
model.add(Dense(10*34*30, 1024))
model.add(Activation(&#39;tanh&#39;))

model.add(Dense(1024, totalClassCount))
model.add(Activation(&#39;softmax&#39;))

sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=sgd,class_mode=&quot;categorical&quot;)

model.fit(data, label, batch_size=40, nb_epoch=50,shuffle=True,verbose=1,
	show_accuracy=True,validation_data=...)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;raw-frgc-80&quot;&gt;Raw-FRGC-80&lt;/h1&gt;

&lt;h2 id=&quot;result-3&quot;&gt;Result&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data size(test, train, valid)&lt;/td&gt;
      &lt;td&gt;nb_epoch&lt;/td&gt;
      &lt;td&gt;test(loss, acc.)&lt;/td&gt;
      &lt;td&gt;train(loss, acc.)&lt;/td&gt;
      &lt;td&gt;valid(loss, acc.)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;————-&lt;/td&gt;
      &lt;td&gt;——————&lt;/td&gt;
      &lt;td&gt;———–&lt;/td&gt;
      &lt;td&gt;———–&lt;/td&gt;
      &lt;td&gt;———-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(283, 2877, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0035, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0004, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0005, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(1234, 1926, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.0688, 0.9797&lt;/td&gt;
      &lt;td&gt;0.0006, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0006, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(1580, 1580, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.1367, 0.9658&lt;/td&gt;
      &lt;td&gt;0.0007, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0008, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(1863, 1297, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.2030, 0.9463&lt;/td&gt;
      &lt;td&gt;0.0009, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0009, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2180, 980, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.2988, 0.9174&lt;/td&gt;
      &lt;td&gt;0.0011, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0011, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2497, 663, 346)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.5154, 0.8706&lt;/td&gt;
      &lt;td&gt;0.0016, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0017, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2814, 346, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1.0031, 0.7281&lt;/td&gt;
      &lt;td&gt;0.0078, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0123, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2840, 320, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;2.3148, 0.4870&lt;/td&gt;
      &lt;td&gt;0.0033, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0041, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(2920, 240, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;2.4434, 0.4723&lt;/td&gt;
      &lt;td&gt;0.0042, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0045, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(3000, 160, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;2.4024, 0.4957&lt;/td&gt;
      &lt;td&gt;0.0060, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0067, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(3080, 80, 80)&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;2.4811, 0.4617&lt;/td&gt;
      &lt;td&gt;0.0082, 1.0000&lt;/td&gt;
      &lt;td&gt;0.0082, 1.0000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;layer-parameters-4&quot;&gt;Layer Parameters&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!python
model.add(Convolution2D(5, 1, 3, 3))
model.add(MaxPooling2D(poolsize=(2, 2)))

model.add(Convolution2D(10, 5, 3, 3))
model.add(MaxPooling2D(poolsize=(2,2)))

model.add(Flatten())
model.add(Dense(10*14*14, 1024))
model.add(Activation(&#39;tanh&#39;))

model.add(Dense(1024, totalClassCount))
model.add(Activation(&#39;softmax&#39;))

sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=sgd,class_mode=&quot;categorical&quot;)

model.fit(data, label, batch_size=40, nb_epoch=50,shuffle=True,verbose=1,
	show_accuracy=True,validation_data=...)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;ldp-frgc-20x10&quot;&gt;LDP-FRGC-20x10&lt;/h1&gt;

&lt;h2 id=&quot;data-size-1&quot;&gt;Data Size&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;test number = 40&lt;/li&gt;
  &lt;li&gt;valid number = 20&lt;/li&gt;
  &lt;li&gt;train number = 160&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;result-4&quot;&gt;Result&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;test:&lt;/strong&gt;
loss: 0.0013 - acc.: 1.0000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;train:&lt;/strong&gt;
loss: 0.0000 - acc.: 1.0000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;valid:&lt;/strong&gt;
loss: 0.0000 - acc.: 1.0000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;layer-parameters-5&quot;&gt;Layer parameters&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!python
model.add(Convolution2D(5, 4, 5, 5, border_mode=&#39;valid&#39;)) 
model.add(MaxPooling2D(poolsize=(2, 2)))

model.add(Convolution2D(10, 5, 5, 5))
model.add(MaxPooling2D(poolsize=(2,2)))

model.add(Flatten())
model.add(Dense(10*33*29, 2048))
model.add(Activation(&#39;tanh&#39;))

model.add(Dense(2048, totalClassCount))
model.add(Activation(&#39;softmax&#39;))

sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=sgd,class_mode=&quot;categorical&quot;)

model.fit(data, label, batch_size=40, nb_epoch=20,shuffle=True,verbose=1,
	show_accuracy=True,validation_data=...)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;raw-frgc-20x10vs-ldp-frgc-20x10ldp-frgc-20x10&quot;&gt;Raw-FRGC-20x10(vs. &lt;a href=&quot;#ldp-frgc-20x10&quot;&gt;LDP-FRGC-20x10&lt;/a&gt;)&lt;/h1&gt;

&lt;h2 id=&quot;data-size-2&quot;&gt;Data Size&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;test number = 40&lt;/li&gt;
  &lt;li&gt;valid number = 20&lt;/li&gt;
  &lt;li&gt;train number = 160&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;result-5&quot;&gt;Result&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;test:&lt;/strong&gt;
loss: 0.1269 - acc.: 0.9500&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;train:&lt;/strong&gt;
loss: 0.0014 - acc.: 1.0000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;valid:&lt;/strong&gt;
loss: 0.0017 - acc.: 1.0000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;layer-parameters-6&quot;&gt;Layer Parameters&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!python
model.add(Convolution2D(5, 1, 5, 5))
model.add(MaxPooling2D(poolsize=(2, 2)))

model.add(Convolution2D(10, 5, 5, 5))
model.add(MaxPooling2D(poolsize=(2,2)))

model.add(Flatten())
model.add(Dense(10*33*29, 2048))
model.add(Activation(&#39;tanh&#39;))

model.add(Dense(2048, totalClassCount))
model.add(Activation(&#39;softmax&#39;))

sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=sgd,class_mode=&quot;categorical&quot;)

model.fit(data, label, batch_size=40, nb_epoch=20,shuffle=True,verbose=1,
	show_accuracy=True,validation_data=...)
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 26 Sep 2015 19:16:24 +0800</pubDate>
        <link>http://burling.wang/jekyll/update/2015/09/26/welcome-to-jekyll2222.html</link>
        <guid isPermaLink="true">http://burling.wang/jekyll/update/2015/09/26/welcome-to-jekyll2222.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 26 Sep 2015 19:16:24 +0800</pubDate>
        <link>http://burling.wang/jekyll/update/2015/09/26/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://burling.wang/jekyll/update/2015/09/26/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
